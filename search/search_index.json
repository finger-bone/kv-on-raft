{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"1/","text":"Introduction to the Raft Algorithm Raft is a consensus algorithm that is widely used in distributed systems. It is designed to be fault-tolerant and robust . Raft is now used in many popular distributed systems, such as: Zookeeper, etcd, and Kubernetes. It is the only algorithm that is guaranteed to yield a strong consistency result for now. Raft is a consensus algorithm . This means that it doesn't guarantee consistency . Consistency is a property meaning that, the whole distributed system, as a whole, behaves as if a single thread single machine. Whereas Raft doesn't guarantee consistency, it guarantees consensus , that every node in the distributed system agrees on the same thing, such as a certain value.","title":"Theory"},{"location":"1/#introduction-to-the-raft-algorithm","text":"Raft is a consensus algorithm that is widely used in distributed systems. It is designed to be fault-tolerant and robust . Raft is now used in many popular distributed systems, such as: Zookeeper, etcd, and Kubernetes. It is the only algorithm that is guaranteed to yield a strong consistency result for now. Raft is a consensus algorithm . This means that it doesn't guarantee consistency . Consistency is a property meaning that, the whole distributed system, as a whole, behaves as if a single thread single machine. Whereas Raft doesn't guarantee consistency, it guarantees consensus , that every node in the distributed system agrees on the same thing, such as a certain value.","title":"Introduction to the Raft Algorithm"},{"location":"readme/","text":"KV on Raft","title":"KV on Raft"},{"location":"readme/#kv-on-raft","text":"","title":"KV on Raft"}]}