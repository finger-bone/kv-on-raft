{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"1/","text":"Introduction to the Raft Algorithm Raft is a consensus algorithm that is widely used in distributed systems. It is designed to be fault-tolerant and robust . Raft is now used in many popular distributed systems, such as: Zookeeper, etcd, and Kubernetes. It is the only algorithm that is guaranteed to yield a strong consistency result for now. Raft is a consensus algorithm . This means that it guarantee linearizability , or consistency . That the distributed system behaves as if a single thread machine to foreign requests. We will see how Raft works to achieve this goal. Roles Each node in a Raft cluster has one of the following roles: Leader, the head of the cluster that actually handles all requests. Every node in the cluster will have the same state as the leader. There can only be one leader at a time. Follower, any node that is under the governance of the leader. Candidate, a node that is not a leader, and not under the governance of the leader. A candidate will try to become a leader through the election process.","title":"Theory"},{"location":"1/#introduction-to-the-raft-algorithm","text":"Raft is a consensus algorithm that is widely used in distributed systems. It is designed to be fault-tolerant and robust . Raft is now used in many popular distributed systems, such as: Zookeeper, etcd, and Kubernetes. It is the only algorithm that is guaranteed to yield a strong consistency result for now. Raft is a consensus algorithm . This means that it guarantee linearizability , or consistency . That the distributed system behaves as if a single thread machine to foreign requests. We will see how Raft works to achieve this goal.","title":"Introduction to the Raft Algorithm"},{"location":"1/#roles","text":"Each node in a Raft cluster has one of the following roles: Leader, the head of the cluster that actually handles all requests. Every node in the cluster will have the same state as the leader. There can only be one leader at a time. Follower, any node that is under the governance of the leader. Candidate, a node that is not a leader, and not under the governance of the leader. A candidate will try to become a leader through the election process.","title":"Roles"},{"location":"1/#_1","text":"","title":""},{"location":"readme/","text":"KV on Raft This series will introduce the detailed process of implementing Raft algorithm. We will implement a distributed KV store using algorithm.","title":"KV on Raft"},{"location":"readme/#kv-on-raft","text":"This series will introduce the detailed process of implementing Raft algorithm. We will implement a distributed KV store using algorithm.","title":"KV on Raft"}]}